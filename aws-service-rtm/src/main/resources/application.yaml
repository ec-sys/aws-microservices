server:
  port: ${REST_SERVER_PORT:9004}

spring:
  profiles:
    active: ${ACTIVE_PROFILE:local}
  application:
    name: service-rtm
  datasource:
    url: ${MYSQL_URL:jdbc:mysql://localhost:3306/db_zenblog}
    username: ${MYSQL_USER_NAME:root}
    password: ${MYSQL_PASSWORD:root123}
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
  output:
    ansi:
      enabled: always
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
    port: ${RABBITMQ_PORT:5672}
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      password: ${REDIS_PASSWORD:root123}
      port: ${REDIS_PORT:6379}

#grpc
grpc:
  server:
    port: ${GRPC_SERVER_PORT:1104}
  client:
    post:
      address: ${GRPC_CLIENT_POST_URL:static://localhost:1102}
      negotiationType: plaintext

#management
management:
  #spring actuator
  endpoints:
    web:
      exposure:
        include:
          - health
    enabled-by-default: 'false'
  endpoint:
    health:
      enabled: 'true'
      show-details: never
  #tracing
  tracing:
    enabled: ${ENABLED_TRACING:false}
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_SERVER:http://localhost:9411/api/v2/spans}

#stomp
stomp:
  broker:
    enable-broker-relay: ${STOMP_BROKER_ENABLE_BROKER_RELAY:true}
    relay-host: ${STOMP_BROKER_HOST:localhost}
    relay-port: ${STOMP_BROKER_PORT:61613}
    username: ${STOMP_BROKER_USERNAME:guest}
    password: ${STOMP_BROKER_PASSWORD:guest}
    virtual-host: ${STOMP_BROKER_VIRTUAL_HOST:/}
    heartbeat-send-interval: ${STOMP_BROKER_HEART_BEAT_SEND:15000}
    heartbeat-receive-interval: ${STOMP_BROKER_HEART_BEAT_RECEIVE:15000}

#logging
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{traceId:-},%X{spanId:-}] ${LOG_LEVEL_PATTERN:-%5p} %m%n"
    # traceID and spanId are predefined MDC keys - we want the logs to include them
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

jwt:
  issuer: ${JWT_ISSUER:ec.sys}
  algorithm-name: ${JWT_ALGORITHM_NAME:HS512}
  access-token-expire-in-second: ${ACCESS_TOKEN_EXPIRE_IN_SECOND:864000}
  refresh-token-expire-in-second: ${REFRESH_TOKEN_EXPIRE_IN_SECOND:1728000}
  secret: ${JWT_SECRET:123@abc}