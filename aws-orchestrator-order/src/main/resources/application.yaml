server:
  port: ${REST_SERVER_PORT:9102}

spring:
  profiles:
    active: ${ACTIVE_PROFILE:local}
  application:
    name: orchestrator-order
  data:
    mongodb:
      uri: ${MONGO_URL:mongodb://localhost:27017/ec_order}
      auto-index-creation: true
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092,localhost:9093,localhost:9094}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    streams:
      properties:
        default.key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
        default.value.serde: org.springframework.kafka.support.serializer.JsonSerde
        spring.json.trusted.packages: "*"
      state-dir: /tmp/kafka-streams/
  output:
    ansi:
      enabled: always

#grpc
grpc:
  server:
    port: ${GRPC_SERVER_PORT:1600}
  client:
    order:
      address: ${GRPC_CLIENT_COMMENT_URL:static://localhost:1500}
      negotiationType: plaintext
    inventory:
      address: ${GRPC_CLIENT_COMMENT_URL:static://localhost:1501}
      negotiationType: plaintext
    customer:
      address: ${GRPC_CLIENT_COMMENT_URL:static://localhost:1502}
      negotiationType: plaintext

#management
management:
  #spring actuator
  endpoints:
    web:
      exposure:
        include:
          - health
    enabled-by-default: 'false'
  endpoint:
    health:
      enabled: 'true'
      show-details: never
  #tracing
  tracing:
    enabled: ${ENABLED_TRACING:false}
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_SERVER:http://localhost:9411/api/v2/spans}

#logging
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{traceId:-},%X{spanId:-}] ${LOG_LEVEL_PATTERN:-%5p} %m%n"
    # traceID and spanId are predefined MDC keys - we want the logs to include them
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"