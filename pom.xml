<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.4</version>
        <relativePath />
    </parent>

    <groupId>demo.aws</groupId>
    <artifactId>aws-microservices</artifactId>
    <version>0.1</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>17</java.version>
        <spring-cloud.version>2023.0.0</spring-cloud.version>
        <spring-cloud-aws.version>3.1.1</spring-cloud-aws.version>
        <micrometer-tracing.version>1.2.4</micrometer-tracing.version>
        <grpc.version>1.63.0</grpc.version>
    </properties>

    <modules>
        <!-- for learning about coomon tech like: api-gateway, grpc, jwt -->
        <module>aws-common-util</module>
        <module>aws-service-framework</module>
        <module>aws-protobuf</module>
        <module>aws-api-gateway</module>
        <module>aws-service-uaa</module>
        <module>aws-service-post</module>
        <module>aws-service-comment</module>

        <!-- for learning about web-socket -->
        <module>aws-service-rtm</module>
        <module>aws-service-chat</module>
        <module>aws-web-app</module>

        <!-- for learning about job, batch, multi data-source, multi database -->
        <module>aws-service-faker</module>
        <module>aws-k8s-job</module>
        <module>aws-service-batch</module>

        <!-- for learning about messaging, transaction (ex:kafka, rabbit-mq, aws sqs, aws sns, localstack for aws development) -->
        <module>aws-service-order</module>
        <module>aws-orchestrator-order</module>
        <module>aws-service-customer</module>
        <module>aws-service-inventory</module>
        <!-- for learning about mysql-replicas, redis replicas-cluster, elastic search -->
        <module>aws-service-product</module>
        <module>aws-service-product-search</module>
        <module>aws-service-product-cache</module>

        <!-- for learning about transaction, clean architecture -->
        <module>aws-service-payment</module>

        <!-- for learning about graphql -->
        <module>sample-graphql</module>

        <!-- for test load balancing at local -->
        <module>aws-eureka-server</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.awspring.cloud</groupId>
                <artifactId>spring-cloud-aws-dependencies</artifactId>
                <version>${spring-cloud-aws.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-tracing-bom</artifactId>
                <version>${micrometer-tracing.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-bom</artifactId>
                <version>${grpc.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration>
                    <from>
                        <image>openjdk:17-alpine</image>
                    </from>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                </configuration>
                <version>3.4.0</version>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>