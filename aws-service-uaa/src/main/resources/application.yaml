
server:
  port: ${REST_SERVER_PORT:9001}

spring:
  profiles:
    active: ${ACTIVE_PROFILE:local}
  application:
    name: service-uaa
  datasource:
    url: ${MYSQL_URL:jdbc:mysql://localhost:3306/db_zenblog}
    username: ${DB_USER_NAME:root}
    password: ${DB_PASSWORD:root123}
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: none
  output:
    ansi:
      enabled: always
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      password: ${REDIS_PASSWORD:root123}
      port: ${REDIS_PORT:6379}
  zipkin:
    enabled: ${ENABLED_ZIPKIN:true}

jwt:
  issuer: ${JWT_ISSUER:ec.sys}
  algorithm-name: ${JWT_ALGORITHM_NAME:HS512}
  access-token-expire-in-second: ${ACCESS_TOKEN_EXPIRE_IN_SECOND:864000}
  refresh-token-expire-in-second: ${REFRESH_TOKEN_EXPIRE_IN_SECOND:1728000}
  secret: ${JWT_SECRET:123@abc}

#management
management:
  #spring actuator
  endpoints:
    web:
      exposure:
        include:
          - health
    enabled-by-default: 'false'
  endpoint:
    health:
      enabled: 'true'
      show-details: never
  #tracing
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_SERVER:http://localhost:9411/api/v2/spans}

#logging
logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%X{traceId:-},%X{spanId:-}] ${LOG_LEVEL_PATTERN:-%5p} %m%n"
    # traceID and spanId are predefined MDC keys - we want the logs to include them
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"